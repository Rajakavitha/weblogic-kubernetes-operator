# Copyright 2017, 2018 Oracle Corporation and/or its affiliates.  All rights reserved.
# Licensed under the Universal Permissive License v 1.0 as shown at http://oss.oracle.com/licenses/upl.

# The name of the service account that the operator will use to
# make requests to the Kubernetes API server.
serviceAccount: weblogic-operator

# A comma separated list of target namespaces the operator manages
targetNamespaces: "default"

# A list of target namespaces the operator manages (same as targetNamespaces but in list format)
targetNamespacesList:
 - "default"

# The docker image containing the operator code.
image: container-registry.oracle.com/middleware/weblogic-kubernetes-operator:latest

# The image pull policy for the operator docker image.
imagePullPolicy: IfNotPresent

# The node port that should be allocated for the external operator REST https interface.
# This value is required if the 'externalOperatorCert' and 'externalOperatorKey' values are set.
# Otherwise, it is ignored.
externalRestHttpsPort: 31001

# The customer supplied certificate to use for the external operator REST
# https interface.  The value must be a string containing a base64 encoded PEM certificate.
# Value can be generated by the create-helm-certificates.sh script. This value is optional.
externalOperatorCert: %EXTERNAL_CERT_DATA%

# The customer supplied private key to use for the external operator REST
# https interface.  The value must be a string containing a base64 encoded PEM key.
# Value can be generated by the create-helm-certificates.sh script. This value is optional.
externalOperatorKey: %EXTERNAL_KEY_DATA%

# Internal certificate for Weblogic operator.
# Value is generated by the create-helm-certificates.sh script.
internalOperatorCert: %INTERNAL_CERT_DATA%

# Internal key for Weblogic operator.
# Value is generated by the create-helm-certificates.sh script.
internalOperatorKey: %INTERNAL_KEY_DATA%

# Controls whether or not the operator will start a Java remote debug server on the
# provided port and will suspend execution until a remote debugger has attached.
# The 'internalDebugHttpPort' property controls the port number inside the Kubernetes
# cluster and the 'externalDebugHttpPort' property controls the port number outside
# the Kubernetes cluster.
remoteDebugNodePortEnabled: false

# The port number inside the Kubernetes cluster for the operator's Java
# remote debug server.
# This parameter is required if 'remoteDebugNodePortEnabled' is true.
# Otherwise, it is ignored.
internalDebugHttpPort: 30999

# The node port that should be allocated for the Kubernetes cluster for the operator's
# Java remote debug server.
# This parameter is required if 'remoteDebugNodePortEnabled' is true.
# Otherwise, it is ignored.
externalDebugHttpPort: 30999

# The level of Java logging that should be enabled in the operator.
# Valid values are: "SEVERE", "WARNING", "INFO", "CONFIG", "FINE", "FINER", and "FINEST".
javaLoggingLevel: INFO

# Controls whether or not ELK integration is enabled.
elkIntegrationEnabled: false
